{"ast":null,"code":"// import { CERTIFICATION } from \"../../app/shared/oldData/CERTIFICATION\";\nimport{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import{baseURL}from\"../../app/shared/baseUrl\";import{mapImageUrl}from\"../../utils/mapImageURL\";import{a}from\"react-spring\";export const fetchCertification=createAsyncThunk('certifications/fetchCertification',async()=>{const response=await fetch(baseURL+'certifications');if(!response.ok){return Promise('Unable to fetch, status: '+response.status);}const data=await response.json();return data;});const initialState={certificationsArray:[],isLoading:true,errMsg:''};const certificationsSlice=createSlice({name:'certifications',initialState,reducers:{},extraReducers:{[fetchCertification.pending]:state=>{state.isLoading=true;},[fetchCertification.fulfilled]:(state,action)=>{state.isLoading=false;state.errMsg='';state.certificationsArray=mapImageUrl(action.payload);},[fetchCertification.rejected]:(state,action)=>{state.isLoading=false;state.errMsg=action.errMsg?action.error.message:'Fetch Failed';}}});export const certificationsReducer=certificationsSlice.reducer;export const selectFeaturedCertifications=state=>{return{featuredItem:state.certifications.certificationsArray.find(certification=>certification.featured),isLoading:state.certifications.isLoading,errMsg:state.certifications.errMsg};};","map":{"version":3,"names":["createSlice","createAsyncThunk","baseURL","mapImageUrl","a","fetchCertification","response","fetch","ok","Promise","status","data","json","initialState","certificationsArray","isLoading","errMsg","certificationsSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","error","message","certificationsReducer","reducer","selectFeaturedCertifications","featuredItem","certifications","find","certification","featured"],"sources":["/Users/marty/Desktop/projects-site/site/src/features/certifications/certificationsSlice.js"],"sourcesContent":["// import { CERTIFICATION } from \"../../app/shared/oldData/CERTIFICATION\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { baseURL } from \"../../app/shared/baseUrl\";\nimport { mapImageUrl } from \"../../utils/mapImageURL\";\nimport { a } from \"react-spring\";\n\nexport const fetchCertification = createAsyncThunk (\n    'certifications/fetchCertification',\n    async () => {\n        const response = await fetch(baseURL + 'certifications');\n        if (!response.ok) {\n            return Promise('Unable to fetch, status: ' + response.status);\n        }\n        const data = await response.json(); \n        return data; \n    }\n);\n\nconst initialState = {\n    certificationsArray: [],\n    isLoading: true,\n    errMsg: ''\n};\n\nconst certificationsSlice = createSlice({\n    name: 'certifications',\n    initialState, \n    reducers: {},\n    extraReducers: {\n        [fetchCertification.pending]: (state) => {\n            state.isLoading = true;\n        },\n        [fetchCertification.fulfilled]: (state, action) => {\n            state.isLoading = false;\n            state.errMsg = ''; \n            state.certificationsArray = mapImageUrl(action.payload);\n        },\n        [fetchCertification.rejected]: (state, action) => {\n            state.isLoading = false; \n            state.errMsg = action.errMsg ? action.error.message : 'Fetch Failed'\n        }\n    }\n});\n\nexport const certificationsReducer = certificationsSlice.reducer; \n\nexport const selectFeaturedCertifications = (state) => {\n    return {\n        featuredItem: state.certifications.certificationsArray.find((certification) => certification.featured),\n        isLoading: state.certifications.isLoading,\n        errMsg: state.certifications.errMsg\n    }\n}\n"],"mappings":"AAAA;AACA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,OAASC,OAAO,KAAQ,0BAA0B,CAClD,OAASC,WAAW,KAAQ,yBAAyB,CACrD,OAASC,CAAC,KAAQ,cAAc,CAEhC,MAAO,MAAM,CAAAC,kBAAkB,CAAGJ,gBAAgB,CAC9C,mCAAmC,CACnC,SAAY,CACR,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACL,OAAO,CAAG,gBAAgB,CAAC,CACxD,GAAI,CAACI,QAAQ,CAACE,EAAE,CAAE,CACd,MAAO,CAAAC,OAAO,CAAC,2BAA2B,CAAGH,QAAQ,CAACI,MAAM,CAAC,CACjE,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CACJ,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,CACjBC,mBAAmB,CAAE,EAAE,CACvBC,SAAS,CAAE,IAAI,CACfC,MAAM,CAAE,EACZ,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAGjB,WAAW,CAAC,CACpCkB,IAAI,CAAE,gBAAgB,CACtBL,YAAY,CACZM,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAE,CACX,CAACf,kBAAkB,CAACgB,OAAO,EAAIC,KAAK,EAAK,CACrCA,KAAK,CAACP,SAAS,CAAG,IAAI,CAC1B,CAAC,CACD,CAACV,kBAAkB,CAACkB,SAAS,EAAG,CAACD,KAAK,CAAEE,MAAM,GAAK,CAC/CF,KAAK,CAACP,SAAS,CAAG,KAAK,CACvBO,KAAK,CAACN,MAAM,CAAG,EAAE,CACjBM,KAAK,CAACR,mBAAmB,CAAGX,WAAW,CAACqB,MAAM,CAACC,OAAO,CAAC,CAC3D,CAAC,CACD,CAACpB,kBAAkB,CAACqB,QAAQ,EAAG,CAACJ,KAAK,CAAEE,MAAM,GAAK,CAC9CF,KAAK,CAACP,SAAS,CAAG,KAAK,CACvBO,KAAK,CAACN,MAAM,CAAGQ,MAAM,CAACR,MAAM,CAAGQ,MAAM,CAACG,KAAK,CAACC,OAAO,CAAG,cAAc,CACxE,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,qBAAqB,CAAGZ,mBAAmB,CAACa,OAAO,CAEhE,MAAO,MAAM,CAAAC,4BAA4B,CAAIT,KAAK,EAAK,CACnD,MAAO,CACHU,YAAY,CAAEV,KAAK,CAACW,cAAc,CAACnB,mBAAmB,CAACoB,IAAI,CAAEC,aAAa,EAAKA,aAAa,CAACC,QAAQ,CAAC,CACtGrB,SAAS,CAAEO,KAAK,CAACW,cAAc,CAAClB,SAAS,CACzCC,MAAM,CAAEM,KAAK,CAACW,cAAc,CAACjB,MACjC,CAAC,CACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}