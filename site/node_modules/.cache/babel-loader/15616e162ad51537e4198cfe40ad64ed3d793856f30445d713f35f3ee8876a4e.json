{"ast":null,"code":"var _jsxFileName = \"/Users/marty/Desktop/projects-site/src/features/display/AnimatedDisplayCard.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\n// import { useSpring, animated } from 'react-spring';\n\n// const AnimatedDisplayCard = ({ item }) => {\n//     const { image, name, description } = item;\n//     const [toggle, setToggle] = useState(false);\n//     const [isHovered, setIsHovered] = useState(false);\n\n//     const animatedStyle = useSpring({\n//         opacity: toggle ? 1 : 0,\n//         transform: toggle ? (isHovered ? 'scale(1.03)' : 'scale(1)') : 'scale(0.9)',\n//         boxShadow: toggle ? (isHovered ? '0 15px 25px rgba(0,0,0,0.3)' : '0 10px 20px rgba(0,0,0,0.2)') : '0 0 0 rgba(0,0,0,0)',\n//         config: { tension: 300, friction: 10 }\n//     });\n\n//     useEffect(() => {\n//         setToggle(true);\n//     }, []);\n\n//     return (\n//         <animated.div\n//             style={animatedStyle}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//         >\n//             <Card>\n//                 <CardImg src={image} alt={name} />\n//                 <CardBody>\n//                     <CardTitle>{name}</CardTitle>\n//                     <CardText>{description}</CardText>\n//                 </CardBody>\n//             </Card>\n//         </animated.div>\n//     );\n// };\n\n// export default AnimatedDisplayCard;\n\n// // const AnimatedDisplayCard = ({ item }) => {\n// //     const {image, name, description} = item; \n// //     const [toggle, setToggle] = useState(false)\n\n// //     const animatedStyle = useSpring({\n// //         opacity: toggle ? 1 : 0, \n// //         transform: toggle ? 'scale(1,1)' : 'scale(1,0)',\n// //         config: {duration: 500}\n// //     })\n\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { useSpring, animated } from \"react-spring\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedDisplayCard = ({\n  item\n}) => {\n  _s();\n  const {\n    name,\n    description\n  } = item;\n  const animatedStyle = useSpring({\n    opacity: 1,\n    from: {\n      opacity: 0\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: animatedStyle,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'black',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '300px',\n          backgroundColor: 'black'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(AnimatedDisplayCard, \"LMM1hQWW3tmMGhM/qr78AhmsJbM=\", false, function () {\n  return [useSpring];\n});\n_c = AnimatedDisplayCard;\nexport default AnimatedDisplayCard;\nvar _c;\n$RefreshReg$(_c, \"AnimatedDisplayCard\");","map":{"version":3,"names":["Card","CardBody","CardTitle","CardText","useSpring","animated","jsxDEV","_jsxDEV","AnimatedDisplayCard","item","_s","name","description","animatedStyle","opacity","from","div","style","children","backgroundColor","color","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/marty/Desktop/projects-site/src/features/display/AnimatedDisplayCard.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n// import { Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\n// import { useSpring, animated } from 'react-spring';\n\n// const AnimatedDisplayCard = ({ item }) => {\n//     const { image, name, description } = item;\n//     const [toggle, setToggle] = useState(false);\n//     const [isHovered, setIsHovered] = useState(false);\n\n//     const animatedStyle = useSpring({\n//         opacity: toggle ? 1 : 0,\n//         transform: toggle ? (isHovered ? 'scale(1.03)' : 'scale(1)') : 'scale(0.9)',\n//         boxShadow: toggle ? (isHovered ? '0 15px 25px rgba(0,0,0,0.3)' : '0 10px 20px rgba(0,0,0,0.2)') : '0 0 0 rgba(0,0,0,0)',\n//         config: { tension: 300, friction: 10 }\n//     });\n\n//     useEffect(() => {\n//         setToggle(true);\n//     }, []);\n\n//     return (\n//         <animated.div\n//             style={animatedStyle}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//         >\n//             <Card>\n//                 <CardImg src={image} alt={name} />\n//                 <CardBody>\n//                     <CardTitle>{name}</CardTitle>\n//                     <CardText>{description}</CardText>\n//                 </CardBody>\n//             </Card>\n//         </animated.div>\n//     );\n// };\n\n// export default AnimatedDisplayCard;\n\n\n\n\n\n\n// // const AnimatedDisplayCard = ({ item }) => {\n// //     const {image, name, description} = item; \n// //     const [toggle, setToggle] = useState(false)\n\n// //     const animatedStyle = useSpring({\n// //         opacity: toggle ? 1 : 0, \n// //         transform: toggle ? 'scale(1,1)' : 'scale(1,0)',\n// //         config: {duration: 500}\n// //     })\n\n\n\n\n\n\n\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst AnimatedDisplayCard = ({ item }) => {\n    const { name, description } = item;\n    const animatedStyle = useSpring({ opacity: 1, from: { opacity: 0 } });\n    return (\n        <animated.div style={animatedStyle}>\n            <Card style={{ backgroundColor: 'black', color: 'white' }}>\n                <div style={{ width: '100%', height: '300px', backgroundColor: 'black' }}></div>\n                <CardBody>\n                    <CardTitle>{name}</CardTitle>\n                    <CardText>{description}</CardText>\n                </CardBody>\n            </Card>\n        </animated.div>\n    );\n};\n\nexport default AnimatedDisplayCard;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAQA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAChE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGH,IAAI;EAClC,MAAMI,aAAa,GAAGT,SAAS,CAAC;IAAEU,OAAO,EAAE,CAAC;IAAEC,IAAI,EAAE;MAAED,OAAO,EAAE;IAAE;EAAE,CAAC,CAAC;EACrE,oBACIP,OAAA,CAACF,QAAQ,CAACW,GAAG;IAACC,KAAK,EAAEJ,aAAc;IAAAK,QAAA,eAC/BX,OAAA,CAACP,IAAI;MAACiB,KAAK,EAAE;QAAEE,eAAe,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,gBACtDX,OAAA;QAAKU,KAAK,EAAE;UAAEI,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,OAAO;UAAEH,eAAe,EAAE;QAAQ;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChFnB,OAAA,CAACN,QAAQ;QAAAiB,QAAA,gBACLX,OAAA,CAACL,SAAS;UAAAgB,QAAA,EAAEP;QAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC7BnB,OAAA,CAACJ,QAAQ;UAAAe,QAAA,EAAEN;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEvB,CAAC;AAAChB,EAAA,CAdIF,mBAAmB;EAAA,QAECJ,SAAS;AAAA;AAAAuB,EAAA,GAF7BnB,mBAAmB;AAgBzB,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}