{"ast":null,"code":"import{COMMENTS}from\"../../app/shared/COMMENTS\";import{createSlice}from\"@reduxjs/toolkit\";const initialState={commentsArray:COMMENTS};const commentsSlice=createSlice({name:'comments',initialState,reducers:{addComment:(state,action)=>{console.log('addComment action.payload',action.payload);console.log('addComment state.commentsArray',state.commentsArray);const newComment={id:state.commentsArray.length+1,...action.payload};state.commentsArray.push(newComment);}}});export const{addComment}=commentsSlice.actions;export const commentsReducer=commentsSlice.reducer;export const selectCommentsByProjectId=projectId=>state=>{return state.comments.commentsArray.filter(comment=>comment.projectId===parseInt(projectId));};","map":{"version":3,"names":["COMMENTS","createSlice","initialState","commentsArray","commentsSlice","name","reducers","addComment","state","action","console","log","payload","newComment","id","length","push","actions","commentsReducer","reducer","selectCommentsByProjectId","projectId","comments","filter","comment","parseInt"],"sources":["/Users/marty/Desktop/projects-site/site/src/features/comments/commentsSlice.js"],"sourcesContent":["import { COMMENTS } from \"../../app/shared/COMMENTS\"; \nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    commentsArray: COMMENTS\n};\n\nconst commentsSlice = createSlice({\n    name: 'comments',\n    initialState,\n    reducers: {\n        addComment: (state, action) => {\n            console.log('addComment action.payload', action.payload);\n            console.log('addComment state.commentsArray', state.commentsArray);\n            const newComment = {\n                id: state.commentsArray.length + 1,\n                ...action.payload\n            }\n            state.commentsArray.push(newComment);\n        }\n    }\n});\n\nexport const { addComment } = commentsSlice.actions;\n\nexport const commentsReducer = commentsSlice.reducer;\n\nexport const selectCommentsByProjectId = ( projectId ) => (state) => {\n    return state.comments.commentsArray.filter((comment) => comment.projectId === parseInt(projectId));\n};"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,2BAA2B,CACpD,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACjBC,aAAa,CAAEH,QACnB,CAAC,CAED,KAAM,CAAAI,aAAa,CAAGH,WAAW,CAAC,CAC9BI,IAAI,CAAE,UAAU,CAChBH,YAAY,CACZI,QAAQ,CAAE,CACNC,UAAU,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC3BC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEF,MAAM,CAACG,OAAO,CAAC,CACxDF,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEH,KAAK,CAACL,aAAa,CAAC,CAClE,KAAM,CAAAU,UAAU,CAAG,CACfC,EAAE,CAAEN,KAAK,CAACL,aAAa,CAACY,MAAM,CAAG,CAAC,CAClC,GAAGN,MAAM,CAACG,OACd,CAAC,CACDJ,KAAK,CAACL,aAAa,CAACa,IAAI,CAACH,UAAU,CAAC,CACxC,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEN,UAAW,CAAC,CAAGH,aAAa,CAACa,OAAO,CAEnD,MAAO,MAAM,CAAAC,eAAe,CAAGd,aAAa,CAACe,OAAO,CAEpD,MAAO,MAAM,CAAAC,yBAAyB,CAAKC,SAAS,EAAOb,KAAK,EAAK,CACjE,MAAO,CAAAA,KAAK,CAACc,QAAQ,CAACnB,aAAa,CAACoB,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACH,SAAS,GAAKI,QAAQ,CAACJ,SAAS,CAAC,CAAC,CACtG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}