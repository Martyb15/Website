{"ast":null,"code":"import{useState,useEffect}from'react';import{Card,CardImg,CardBody,CardTitle,CardText}from'reactstrap';import{useSpring,animated}from'react-spring';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AnimatedDisplayCard=_ref=>{let{item}=_ref;const{image,name,description}=item;const[toggle,setToggle]=useState(false);const[isHovered,setIsHovered]=useState(false);const animatedStyle=useSpring({opacity:toggle?1:0,transform:toggle?isHovered?'scale(1.03)':'scale(1)':'scale(0.9)',boxShadow:toggle?isHovered?'0 15px 25px rgba(0,0,0,0.3)':'0 10px 20px rgba(0,0,0,0.2)':'0 0 0 rgba(0,0,0,0)',config:{tension:300,friction:10}});useEffect(()=>{setToggle(true);},[]);return/*#__PURE__*/_jsx(animated.div,{style:animatedStyle,onMouseEnter:()=>setIsHovered(true),onMouseLeave:()=>setIsHovered(false),children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardImg,{src:image,alt:name}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardTitle,{children:name}),/*#__PURE__*/_jsx(CardText,{children:description})]})]})});};export default AnimatedDisplayCard;// const AnimatedDisplayCard = ({ item }) => {\n//     const {image, name, description} = item; \n//     const [toggle, setToggle] = useState(false)\n//     const animatedStyle = useSpring({\n//         opacity: toggle ? 1 : 0, \n//         transform: toggle ? 'scale(1,1)' : 'scale(1,0)',\n//         config: {duration: 500}\n//     })","map":{"version":3,"names":["useState","useEffect","Card","CardImg","CardBody","CardTitle","CardText","useSpring","animated","jsx","_jsx","jsxs","_jsxs","AnimatedDisplayCard","_ref","item","image","name","description","toggle","setToggle","isHovered","setIsHovered","animatedStyle","opacity","transform","boxShadow","config","tension","friction","div","style","onMouseEnter","onMouseLeave","children","src","alt"],"sources":["/Users/marty/Desktop/projects-site/site/src/features/display/AnimatedDisplayCard.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { useSpring, animated } from 'react-spring';\n\nconst AnimatedDisplayCard = ({ item }) => {\n    const { image, name, description } = item;\n    const [toggle, setToggle] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n\n    const animatedStyle = useSpring({\n        opacity: toggle ? 1 : 0,\n        transform: toggle ? (isHovered ? 'scale(1.03)' : 'scale(1)') : 'scale(0.9)',\n        boxShadow: toggle ? (isHovered ? '0 15px 25px rgba(0,0,0,0.3)' : '0 10px 20px rgba(0,0,0,0.2)') : '0 0 0 rgba(0,0,0,0)',\n        config: { tension: 300, friction: 10 }\n    });\n\n    useEffect(() => {\n        setToggle(true);\n    }, []);\n\n    return (\n        <animated.div\n            style={animatedStyle}\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n        >\n            <Card>\n                <CardImg src={image} alt={name} />\n                <CardBody>\n                    <CardTitle>{name}</CardTitle>\n                    <CardText>{description}</CardText>\n                </CardBody>\n            </Card>\n        </animated.div>\n    );\n};\n\nexport default AnimatedDisplayCard;\n\n\n\n\n\n\n// const AnimatedDisplayCard = ({ item }) => {\n//     const {image, name, description} = item; \n//     const [toggle, setToggle] = useState(false)\n\n//     const animatedStyle = useSpring({\n//         opacity: toggle ? 1 : 0, \n//         transform: toggle ? 'scale(1,1)' : 'scale(1,0)',\n//         config: {duration: 500}\n//     })"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,IAAI,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,YAAY,CACzE,OAASC,SAAS,CAAEC,QAAQ,KAAQ,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,mBAAmB,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACjC,KAAM,CAAEE,KAAK,CAAEC,IAAI,CAAEC,WAAY,CAAC,CAAGH,IAAI,CACzC,KAAM,CAACI,MAAM,CAAEC,SAAS,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACqB,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAuB,aAAa,CAAGhB,SAAS,CAAC,CAC5BiB,OAAO,CAAEL,MAAM,CAAG,CAAC,CAAG,CAAC,CACvBM,SAAS,CAAEN,MAAM,CAAIE,SAAS,CAAG,aAAa,CAAG,UAAU,CAAI,YAAY,CAC3EK,SAAS,CAAEP,MAAM,CAAIE,SAAS,CAAG,6BAA6B,CAAG,6BAA6B,CAAI,qBAAqB,CACvHM,MAAM,CAAE,CAAEC,OAAO,CAAE,GAAG,CAAEC,QAAQ,CAAE,EAAG,CACzC,CAAC,CAAC,CAEF5B,SAAS,CAAC,IAAM,CACZmB,SAAS,CAAC,IAAI,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIV,IAAA,CAACF,QAAQ,CAACsB,GAAG,EACTC,KAAK,CAAER,aAAc,CACrBS,YAAY,CAAEA,CAAA,GAAMV,YAAY,CAAC,IAAI,CAAE,CACvCW,YAAY,CAAEA,CAAA,GAAMX,YAAY,CAAC,KAAK,CAAE,CAAAY,QAAA,cAExCtB,KAAA,CAACV,IAAI,EAAAgC,QAAA,eACDxB,IAAA,CAACP,OAAO,EAACgC,GAAG,CAAEnB,KAAM,CAACoB,GAAG,CAAEnB,IAAK,CAAE,CAAC,cAClCL,KAAA,CAACR,QAAQ,EAAA8B,QAAA,eACLxB,IAAA,CAACL,SAAS,EAAA6B,QAAA,CAAEjB,IAAI,CAAY,CAAC,cAC7BP,IAAA,CAACJ,QAAQ,EAAA4B,QAAA,CAAEhB,WAAW,CAAW,CAAC,EAC5B,CAAC,EACT,CAAC,CACG,CAAC,CAEvB,CAAC,CAED,cAAe,CAAAL,mBAAmB,CAOlC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}