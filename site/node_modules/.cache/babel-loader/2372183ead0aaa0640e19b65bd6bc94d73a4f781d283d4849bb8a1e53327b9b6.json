{"ast":null,"code":"var _jsxFileName = \"/Users/marty/Desktop/projects-site/src/features/comments/CommentForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, FormGroup, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  projectId\n}) => {\n  _s();\n  const {\n    image,\n    name,\n    id\n  } = projectId;\n  const [modalOpen, setModalOpen] = useState(false);\n  const handleSubmit = values => {\n    const comment = {\n      id: values.id,\n      projectId: parseInt(projectId),\n      rating: parseInt(values.rating),\n      text: values.commentText,\n      author: values.author\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      outline: true,\n      onClick: () => setModalOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-pencil fa-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), \" Add Comment\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => setModalOpen(false),\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [\"project: \", projectId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CommentForm, \"CMfkJY0oHKX43wkRh7WkxSiVV1E=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["useState","Button","Modal","ModalBody","ModalHeader","FormGroup","Label","Formik","Field","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentForm","projectId","_s","image","name","id","modalOpen","setModalOpen","handleSubmit","values","comment","parseInt","rating","text","commentText","author","children","outline","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","toggle","_c","$RefreshReg$"],"sources":["/Users/marty/Desktop/projects-site/src/features/comments/CommentForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Button, Modal, ModalBody, ModalHeader, FormGroup, Label } from \"reactstrap\";\nimport { Formik, Field, Form } from \"formik\";\n\nconst CommentForm = ({projectId}) => {\n    \n    const {image, name, id} = projectId;\n    const [modalOpen, setModalOpen] = useState(false); \n\n    const handleSubmit = (values) => {\n        const comment = \n        {\n            id: values.id,\n            projectId: parseInt(projectId),\n            rating: parseInt(values.rating),\n            text: values.commentText,\n            author: values.author\n        };\n    }\n\n    return (\n        <>\n            <Button outline onClick={() => setModalOpen(true)}>\n                <i className='fa fa-pencil fa-lg' /> Add Comment\n            </Button>\n\n            <Modal isOpen={modalOpen}>\n                <ModalHeader toggle={() => setModalOpen(false)}>Add Comment</ModalHeader>\n                <ModalBody>project: {projectId}</ModalBody>\n            </Modal>\n        </>\n    );\n};\n\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,KAAK,QAAQ,YAAY;AACpF,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAM;IAACC,KAAK;IAAEC,IAAI;IAAEC;EAAE,CAAC,GAAGJ,SAAS;EACnC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMsB,YAAY,GAAIC,MAAM,IAAK;IAC7B,MAAMC,OAAO,GACb;MACIL,EAAE,EAAEI,MAAM,CAACJ,EAAE;MACbJ,SAAS,EAAEU,QAAQ,CAACV,SAAS,CAAC;MAC9BW,MAAM,EAAED,QAAQ,CAACF,MAAM,CAACG,MAAM,CAAC;MAC/BC,IAAI,EAAEJ,MAAM,CAACK,WAAW;MACxBC,MAAM,EAAEN,MAAM,CAACM;IACnB,CAAC;EACL,CAAC;EAED,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA,CAACV,MAAM;MAAC8B,OAAO;MAACC,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,IAAI,CAAE;MAAAS,QAAA,gBAC9CnB,OAAA;QAAGsB,SAAS,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBACxC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET1B,OAAA,CAACT,KAAK;MAACoC,MAAM,EAAElB,SAAU;MAAAU,QAAA,gBACrBnB,OAAA,CAACP,WAAW;QAACmC,MAAM,EAAEA,CAAA,KAAMlB,YAAY,CAAC,KAAK,CAAE;QAAAS,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzE1B,OAAA,CAACR,SAAS;QAAA2B,QAAA,GAAC,WAAS,EAACf,SAAS;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA,eACV,CAAC;AAEX,CAAC;AAACrB,EAAA,CA5BIF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}